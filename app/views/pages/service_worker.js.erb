var CACHE_NAME = 'cached-assets-v1'

self.addEventListener('install', e => {
  e.waitUntil(
    caches.open(CACHE_NAME).then(function prefill(cache) {
      return cache.addAll([
        '/',
        '<%= asset_path "application.css" %>',
        '<%= asset_pack_path "application.js" %>',
        '<%= asset_pack_path "media/images/dai.png" %>',
        '<%= asset_pack_path "media/images/usdc.png" %>',
        '<%= asset_pack_path "media/images/bat.png" %>',
        '<%= asset_pack_path "media/images/eth.png" %>',
        '<%= asset_pack_path "media/images/ethrsiapy.png" %>',
        '<%= asset_pack_path "media/images/uni.png" %>',
        '<%= asset_pack_path "media/images/wbtc.png" %>',
        '<%= asset_path "favicon.ico" %>'
      ]);
    })
  );
});

self.addEventListener('activate', e => {
  console.log('activate', 'cleaning caches');

  e.waitUntil(
    caches.keys().then(cacheNames => {
      return Promise.all(
        cacheNames
          .filter(key => key !== CACHE_NAME)
          .map(cacheName => {
            return caches.delete(cacheName);
          })
      );
    })
  ); 
});

self.addEventListener('fetch', e => {
  e.respondWith(
    caches.match(e.request)
      .then(cachedResponse => {
        if (cachedResponse) {
          return cachedResponse;
        }

        return fetch(e.request).then(fechedResponse => {
            if(!fechedResponse || fechedResponse.status !== 200 || fechedResponse.type !== 'basic') {
              return fechedResponse;
            }

            var responseToCache = fechedResponse.clone()

            caches.open(CACHE_NAME)
              .then(function(cache) {
                cache.put(e.request, responseToCache);
              });

            return fechedResponse;
          }
        );
      }
    )
  );
});